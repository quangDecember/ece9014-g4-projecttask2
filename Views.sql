--BATCH 1
CREATE OR REPLACE VIEW KAGGLE_META.VW_TAGS AS
SELECT
    TAGNAME,
    TAGID,
    SUPERTAGID,
    DESCRIPTION,
	(
      	select count(*) from KAGGLE_META.DATASETTAGS
		where KAGGLE_META.DATASETTAGS.TAGID = KAGGLE_META.TAGS_TB.TAGID 
	) as DatasetCount
	,
	(
      	select count(*) from KAGGLE_META.COMPETITIONTAGS
		where KAGGLE_META.COMPETITIONTAGS.TAGID = KAGGLE_META.TAGS_TB.TAGID 
	) as CompetitionCount
	,
	(
      	select count(*) from KAGGLE_META.KERNEL_TAGS
		where KAGGLE_META.KERNEL_TAGS.TAGID = KAGGLE_META.TAGS_TB.TAGID 
	) as KernelCount

FROM
    KAGGLE_META.TAGS_TB;



CREATE OR REPLACE VIEW KAGGLE_META.VW_SUBMISSIONS AS
SELECT
    KAGGLE_META.SUBMISSIONS.SUBMISSIONID,
    KAGGLE_META.SUBMISSIONS.USERID,
    KAGGLE_META.SUBMISSIONS.TEAMID,
    KAGGLE_META.SUBMISSIONS.SOURCEKERNELVERSIONID,
    KAGGLE_META.SUBMISSIONS.SUBMISSIONDATE,
    KAGGLE_META.SUBMISSIONS.SCOREDATE,
    KAGGLE_META.SUBMISSIONS.PUBLICSCORELEADERBOARDDISPLAY,
    KAGGLE_META.SUBMISSIONS.PUBLICSCOREFULLPRECISION,
    KAGGLE_META.SUBMISSIONS.PRIVATESCORELEADERBOARDDISPLAY,
    KAGGLE_META.SUBMISSIONS.PRIVATESCOREFULLPRECISION,
	
	CASE 
      WHEN KAGGLE_META.COMPETITION.DEADLINE >= KAGGLE_META.SUBMISSIONS.SUBMISSIONDATE
			THEN 0
           ELSE 1              
      END IsAfterDeadline

FROM
    KAGGLE_META.SUBMISSIONS 
LEFT JOIN KAGGLE_META.TEAMS
	ON KAGGLE_META.TEAMS.TEAMID = KAGGLE_META.SUBMISSIONS.TEAMID
LEFT JOIN KAGGLE_META.COMPETITION
	ON KAGGLE_META.COMPETITION.COMPETITIONID = KAGGLE_META.TEAMS.COMPETITIONID;



CREATE OR REPLACE VIEW KAGGLE_META.VW_TEAMS AS
SELECT
    TEAMID,
    COMPETITIONID,
	
	(
      select max(SUBMISSIONDATE) from KAGGLE_META.SUBMISSIONS
	   where KAGGLE_META.SUBMISSIONS.TEAMID=KAGGLE_META.SUBMISSIONS.TEAMID
	) as LastSubmissionDate,

	(
      select count(*) from KAGGLE_META.TEAM_MEMBERSHIPS
	   where KAGGLE_META.TEAM_MEMBERSHIPS.TEAMID=KAGGLE_META.TEAMS.TEAMID
	) as MemberCount,

	(
      select count(*) from KAGGLE_META.SUBMISSIONS
	   where KAGGLE_META.SUBMISSIONS.TEAMID=KAGGLE_META.SUBMISSIONS.TEAMID
	) as submissionCount,

    TEAMLEADERID,
    TEAMNAME,
    SCOREFIRSTSUBMITTEDDATE,
    PUBLICLEADERBOARDSUBMISSIONID,
    PRIVATELEADERBOARDSUBMISSIONID,
    ISBENCHMARK,
    MEDAL,
    MEDALAWARDDATE,
    PUBLICLEADERBOARDRANK,
    PRIVATELEADERBOARDRANK
FROM
    KAGGLE_META.TEAMS;




CREATE OR REPLACE VIEW KAGGLE_META.VW_FORUMTOPICS AS
SELECT
    FORUMTID,
    FORUMID,
    CREATIONDATE,
    TOTALVIEWS,
    SCORE,
	
	(
      select MAX(KAGGLE_META.FORUMMESSAGES_TB.POSTDATE) from KAGGLE_META.FORUMMESSAGES_TB
		WHERE KAGGLE_META.FORUMMESSAGES_TB.FORUMTID = KAGGLE_META.FORUMTOPICS_TB.FORUMTID
	) as LastCommentDate,

	(
      SELECT COUNT(*) FROM KAGGLE_META.FORUMMESSAGES_TB
		WHERE KAGGLE_META.FORUMMESSAGES_TB.FORUMTID = KAGGLE_META.FORUMTOPICS_TB.FORUMTID
	) AS TotalMessages

FROM
    KAGGLE_META.FORUMTOPICS_TB;







--BATCH 2
CREATE OR REPLACE VIEW KAGGLE_META.VW_COMPETITION AS
SELECT
    COMPETITIONID,
    TITLE,
    COMPETITIONTYPEID,
    SUBTITLE,
    FORUMID,
    ORGANIZATIONID,
    HOSTNAME,
    ENABLEDDATE,
    DEADLINE, 

	(
      	SELECT COUNT(*) FROM KAGGLE_META.TEAMS WHERE
      	KAGGLE_META.TEAMS.COMPETITIONID = KAGGLE_META.COMPETITION.COMPETITIONID
	) AS TotalTeams,
	
	(
      	SELECT SUM(MemberCount) FROM KAGGLE_META.VW_TEAMS WHERE 
      	KAGGLE_META.VW_TEAMS.COMPETITIONID = KAGGLE_META.COMPETITION.COMPETITIONID
	) AS TotalCompetitors,
	
	(
      	SELECT SUM(submissionCount) FROM KAGGLE_META.VW_TEAMS WHERE 
      	KAGGLE_META.VW_TEAMS.COMPETITIONID = KAGGLE_META.COMPETITION.COMPETITIONID
	) AS TotalSubmission,
	
	ONLYALLOWKERNELSUBMISSION
FROM
    KAGGLE_META.COMPETITION;



CREATE OR REPLACE VIEW KAGGLE_META.VW_KERNEL_VERSIONS AS
SELECT
    KVID,
    SCRIPTID,
    PARENTKVID,
    LANGUAGEID,
    AUTHORID,
    CREATIONDATE,
    VERSIONNUMBER,
    TITLE,
    EVALUATIONDATE,
    ISCHANGE,

	(
      SELECT COUNT(*) FROM KAGGLE_META.KERNEL_VOTES WHERE 
      	KAGGLE_META.KERNEL_VOTES.KVID = KAGGLE_META.KERNEL_VERSIONS.KVID
	) AS TotalVotes, 

	
    TOTALLINES,
    LINESINSERTEDFROMPREVIOUS,
    LINESCHANGEDFROMPREVIOUS,
    LINESUNCHANGEDFROMPREVIOUS,
    LINESINSERTEDFROMFORK,
    LINESDELETEDFROMFORK,
    LINESCHANGEDFROMFORK,
    LINESUNCHANGEDFROMFORK
FROM
    KAGGLE_META.KERNEL_VERSIONS;



CREATE OR REPLACE VIEW KAGGLE_META.VW_FORUMMESSAGES AS
SELECT
    FORUMMID,
    FORUMTID,
    USERID,
    MESSAGE,
    MEDAL,
    POSTDATE,
    REPLYTOFORUMMESSAGEID,

	(
      select count(*) from KAGGLE_META.FORUMMESSAGEVOTES
		where KAGGLE_META.FORUMMESSAGEVOTES.FORUMMESSAGEID = KAGGLE_META.FORUMMESSAGES_TB.FORUMMID
	) AS TotalVotes

FROM
    KAGGLE_META.FORUMMESSAGES_TB;



CREATE OR REPLACE VIEW KAGGLE_META.VW_DATASETVERSIONS AS 
SELECT
    DATASETVID,
    DATASETID,

	(
      select count(DISTINCT KAGGLE_META.KERNEL_VERSIONS.SCRIPTID) from KAGGLE_META.KERNEL_VERSION_DATASETSOURCES
		LEFT JOIN KAGGLE_META.KERNEL_VERSIONS ON 
		KAGGLE_META.KERNEL_VERSION_DATASETSOURCES.KVID = KAGGLE_META.KERNEL_VERSIONS.KVID
	) AS totalKernels,

    CREATORUSERID,
    CREATIONDATE,
    DESCRIPTION,
    VERSIONNOTES,
    TOTALCOMPRESSEDBYTES
FROM
    KAGGLE_META.DATASETVERSIONS_TB;







--BATCH 3
CREATE OR REPLACE VIEW KAGGLE_META.VW_KERNELS AS
SELECT
    SCRIPTID,
    AUTHORID,
    CURRENTKERNELVERSIONID,
    FORKPARENTKERNELVERSIONID,
    FORUMTOPICID,
    FIRSTKERNELVERSIONID,
    CREATIONDATE,
    EVALUATIONDATE,
    MADEPUBLICDATE,
    ISPROJECTLANGUAGETEMPLATE,
    CURRENTURLSLUG,
    MEDAL,
	TotalViews	INT 	,


	(
      	select count(*) from KAGGLE_META.FORUMMESSAGES_TB
		where KAGGLE_META.FORUMMESSAGES_TB.FORUMTID=KAGGLE_META.KERNELS.FORUMTOPICID
	) as TotalComments,
	
	(
      SELECT SUM(TotalVotes) FROM KAGGLE_META.VW_KERNEL_VERSIONS WHERE 
      	KAGGLE_META.VW_KERNEL_VERSIONS.SCRIPTID = KAGGLE_META.KERNELS.SCRIPTID
	) AS TotalVotes, 

    MEDALAWARDDATE
FROM
    KAGGLE_META.KERNELS;
    
    
    
 

CREATE OR REPLACE VIEW KAGGLE_META.VW_DATASETS AS 
SELECT
    TITLE,
    SUBTITLE,
    DATASETID,
    TAGID,
    CREATORUSERID,
    OWNERUSERID,
    OWNERORGANIZATIONID,
    CURRENTDATASETVERSIONID,
    KERNELID,

	(
      	select sum(KAGGLE_META.VW_DATASETVERSIONS.totalKernels) from KAGGLE_META.VW_DATASETVERSIONS where
      	KAGGLE_META.VW_DATASETVERSIONS.DATASETID = KAGGLE_META.DATASETS_TB.DATASETID
	)AS TotalKernels, 

    DATASOURCEID
FROM
    KAGGLE_META.DATASETS_TB;
